spring.datasource.url= jdbc:postgresql://localhost:5432/tournament
spring.datasource.username=postgres
spring.datasource.password=root

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
    # take our Client ID et Secret Client code Google
spring.security.oauth2.client.registration.google.client-id=25503641991-qdvkg35n76nllcimqiuskmgpoedjc1jl.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.clientId=25503641991-qdvkg35n76nllcimqiuskmgpoedjc1jl.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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

#Take  our ID et Secret Client Code Facebook
spring.security.oauth2.client.registration.facebook.client-id=1033413163884857
spring.security.oauth2.client.registration.facebook.client-secret=30c3d6c50865cba3c98d85089780ffa1
spring.security.oauth2.client.registration.facebook.clientId=1033413163884857
spring.security.oauth2.client.registration.facebook.clientSecret=30c3d6c50865cba3c98d85089780ffa1

#Take  our ID et Secret Client Code Twitter
#spring.security.oauth2.client.registration.twitter.
#spring.security.oauth2.client.registration.twitter.client-id=xvz1evFS4wEEPTGEFPHBog
# spring.security.oauth2.client.registration.twitter.clientId=xvz1evFS4wEEPTGEFPHBog
#spring.security.oauth2.client.registration.twitter.clientSecret=L8qq9PZyRg6ieKGEKhZolGC0vJWLw8iEJ88DRdyOg
#spring.security.oauth2.client.registration.twitter.client-secret=L8qq9PZyRg6ieKGEKhZolGC0vJWLw8iEJ88DRdyOg
#spring.security.oauth2.client.registration.twitter.provider=twitter



#Take our Id et Secret Client Code LinkedIn
#spring.security.oauth2.client.registration.linkedin.client-id=77nw93mw714cet
spring.security.oauth2.client.registration.linkedin.clientId=77nw93mw714cet
#spring.security.oauth2.client.registration.linkedin.client-secret=VjYQIMeFUf9cERj5
spring.security.oauth2.client.registration.linkedin.clientSecret=VjYQIMeFUf9cERj5
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.client-authentication-method=post
spring.security.oauth2.client.registration.linkedin.scope=r_emailaddress,r_liteprofile,w_member_social
spring.security.oauth2.client.registration.linkedin.client-name=LinkedIn
spring.security.oauth2.client.registration.linkedin.provider=linkedin
spring.security.oauth2.client.registration.linkedin.redirect-uri=http://localhost:8080/api/v1/matchs
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-info-authentication-method=post

#spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
#spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile,r_emailaddress
#spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/uas/oauth2/accessToken


#spring.security.oauth2.client.registration.linkedin.client-authentication-method=post
#spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
#spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/uas/oauth2/accessToken

